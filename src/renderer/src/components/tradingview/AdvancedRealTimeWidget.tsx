import { useEffect, useRef, memo, MutableRefObject, ReactNode } from 'react';


type Props = {
  exchange: string;
  ticker: string;
};

function TradingViewWidget(props: Props): ReactNode {
  const pExchange: string = props.exchange;
  const pTicker: string = props.ticker;
  const container: MutableRefObject<HTMLDivElement | null> = useRef(null);

    // THIS IS THE EMBED CODE AS GENERATED BY TRADINGVIEW, MAY NOT BE OPTIMAL!
  useEffect(() => {
    const script = document.createElement("script");
    script.src = "https://s3.tradingview.com/external-embedding/embed-widget-advanced-chart.js";
    script.type = "text/javascript";
    script.async = true;
    script.innerHTML = `
      {
        "autosize": true,
        "symbol": "${pExchange}:${pTicker}",
        "interval": "D",
        "timezone": "Etc/UTC",
        "theme": "light",
        "style": "1",
        "locale": "en",
        "allow_symbol_change": true,
        "calendar": false,
        "support_host": "https://www.tradingview.com"
      }`;
    container.current!.appendChild(script);
  }, [pExchange, pTicker]);

  
  return (
    <div
      className="tradingview-widget-container" 
      ref={container} 
      style={{
        position: "relative", 
        aspectRatio: "16/9", 
        width: "100%" 
      }}
    >
      <div 
        className="tradingview-widget-container__widget" 
        style={{ height: "calc(100% - 32px)", width: "100%" }} 
      />
      <div className="tradingview-widget-copyright">
        <a href="https://www.tradingview.com/" rel="noopener nofollow" target="_blank">
          <span className="blue-text">Track all markets on TradingView</span>
        </a>
      </div>
    </div>
  );
}

export default memo(TradingViewWidget);
